body > .page > .card {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: var(--dcstatus-bottommargin);
}

body > .page > .card .content {
  position: relative;
  overflow: hidden;
  background: var(--dcstatus-bg);
  max-width: var(--dcstatus-width-limit);
  padding: var(--dcstatus-padding);
  border-radius: var(--dcstatus-radius);
  width: 100%;
  box-sizing: border-box;
}

body > .page > .card .content .descriptor {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@media screen and (max-width: 650px) {
  body > .page > .card .content .descriptor {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--dcstatus-descriptorgap-mobile);
  }
}

body > .page > .card .content .descriptor .title {
  color: var(--dcstatus-title);
  font-size: 1.3em;
  font-weight: 500;
}

body > .page > .card .content .descriptor .description {
  color: var(--dcstatus-description);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--dcstatus-description-gap);
  --percent: 0;
}

@media screen and (max-width: 650px) {
  body > .page > .card .content .descriptor .description {
    flex-flow: row-reverse;
  }
}

body > .page > .card .content .descriptor .description svg {
  width: var(--dcstatus-description-progress-size);
  height: var(--dcstatus-description-progress-size);
}

body > .page > .card .content .descriptor .description:not(.definite) svg {
  animation: 1s rotateSvg infinite linear;
}

@keyframes rotateSvg {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

body > .page > .card .content .descriptor .description svg circle {
  fill: none;
  stroke: var(--dcstatus-description-progress-color);
  stroke-width: var(--dcstatus-description-progress-width);
  stroke-dasharray: 48;
  stroke-dashoffset: 15;
  transition: var(--animations-duration) stroke-dashoffset;
}

body > .page > .card .content .descriptor .description.definite svg circle {
  stroke-dashoffset: calc(48px - 48px * var(--percent) / 100);
}

body > .page > .card .content .descriptor .description:not(.definite) svg circle {
  stroke-dashoffset: 44;
}

body > .page > .card .content .descriptor .description .pending {
  transition: var(--animations-duration) transform, var(--animations-duration) opacity;
}

body > .page > .card .content .descriptor .description:not(.definite) .pending {
  transform: scale(0.9);
  opacity: 0;
}

body > .page > .card .content .datacenters {
  padding-top: var(--dcstatus-padding);
}

body > .page > .card .content .datacenters .error {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

body > .page > .card .content .datacenters .error img {
  width: 240px;
  height: 240px;
}

body > .page > .card .content .datacenters .error .title {
  color: var(--error-message-title);
  font-size: 1.8em;
  font-weight: 500;
  text-align: center;
}

body > .page > .card .content .datacenters .error .description {
  color: var(--error-message-description);
  font-size: 1.3em;
  text-align: center;
}

body > .page > .card .content .datacenters .datacenter {
  display: flex;
  align-items: center;
  justify-content: start;
  gap: var(--dcstatus-row-gap);
  position: relative;
  cursor: pointer;
  box-sizing: border-box;
  overflow: hidden;
  padding: 5px;
  transition: var(--animations-duration) padding, var(--animations-duration) background, var(--animations-duration) border-radius;
}

body > .page > .card .content .datacenters .datacenter.expanded {
  padding: var(--dcstatus-row-expanded-padding);
  padding-bottom: calc(var(--dcstatus-row-expanded-padding) + var(--dcstatus-row-expanded-expandable-height));
  background: var(--dcstatus-row-expanded-bg);
  border-radius: var(--dcstatus-row-expanded-radius);
}

body > .page > .card .content .datacenters .datacenter:not(:last-child) {
  margin-bottom: var(--dcstatus-row-gap-lines);
}

body > .page > .card .content .datacenters .datacenter .icon {
  height: 50px;
  width: 50px;
  position: relative;
}

body > .page > .card .content .datacenters .datacenter[data-id="1"] .icon {
  --primary: #329AFE;
  --id: 1;
}

body > .page > .card .content .datacenters .datacenter[data-id="2"] .icon {
  --primary: #A35BFE;
  --id: 2;
}

body > .page > .card .content .datacenters .datacenter[data-id="3"] .icon {
  --primary: #DA5653;
  --id: 3;
}

body > .page > .card .content .datacenters .datacenter[data-id="4"] .icon {
  --primary: #F7B139;
  --id: 4;
}

body > .page > .card .content .datacenters .datacenter[data-id="5"] .icon {
  --primary: #4BD199;
  --id: 5;
}

body > .page > .card .content .datacenters .datacenter .icon::before,
body > .page > .card .content .datacenters .datacenter .icon::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--primary);
  opacity: 0.4;
  z-index: 0;
  border-radius: 50%;
}

body > .page > .card .content .datacenters .datacenter .icon::before {
  animation: 3s animateKey1 infinite ease-in;
  animation-delay: calc(var(--id) * 0.2s);
  transform: translate(2px, -2px);
}

@keyframes animateKey1 {
  from, to {
    transform: translate(2px, -2px);
  }
  50% {
    transform: translate(-2px, 4px);
  }
}

body > .page > .card .content .datacenters .datacenter .icon::after {
  animation: 4.5s animateKey2 infinite cubic-bezier(1, -0.01, 0.58, 1);
  animation-delay: calc(var(--id) * 0.2s);
  transform: translate(4px, 2px);
}

@keyframes animateKey2 {
  from, to {
    transform: translate(4px, 2px);
  }
  50% {
    transform: translate(-2px, -2px);
  }
}

body > .page > .card .content .datacenters .datacenter .icon .background {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: var(--primary);
  position: absolute;
  z-index: 1;
}

body > .page > .card .content .datacenters .datacenter .icon img {
  height: 30px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  z-index: 1;
}

body > .page > .card .content .datacenters .datacenter .description {
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 0.3em;
  flex: 1;
  overflow: hidden;
  white-space: nowrap;
}

body > .page > .card .content .datacenters .datacenter .description .name {
  font-size: var(--dcstatus-row-name-size);
  color: var(--dcstatus-row-name-color);
  overflow: hidden;
  text-overflow: ellipsis;
}

body > .page > .card .content .datacenters .datacenter .description .status {
  font-size: var(--dcstatus-row-status-size);
  overflow: hidden;
  text-overflow: ellipsis;
}

body > .page > .card .content .datacenters .datacenter .description .status.online {
  color: var(--dcstatus-row-status-color-online);
}

body > .page > .card .content .datacenters .datacenter .description .status.slow {
  color: var(--dcstatus-row-status-color-slow);
}

body > .page > .card .content .datacenters .datacenter .description .status.offline {
  color: var(--dcstatus-row-status-color-offline);
}

body > .page > .card .content .datacenters .datacenter .expand {
  filter: var(--icons-transform);
  opacity: 0.8;
  transition: var(--animations-duration) transform;
}

body > .page > .card .content .datacenters .datacenter.expanded .expand {
  transform: rotateX(180deg);
}

body > .page > .card .content .datacenters .datacenter .expandable {
  position: absolute;
  width: calc(100% - var(--dcstatus-row-expanded-padding) * 2);
  bottom: calc(var(--dcstatus-row-expanded-padding) / 2);
  height: var(--dcstatus-row-expanded-expandable-height);
  gap: var(--dcstatus-row-expanded-expandable-gap);
  transform: translateY(120%);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: default;
  transition: var(--animations-duration) opacity, var(--animations-duration) transform;
}

body > .page > .card .content .datacenters .datacenter.expanded .expandable {
  transform: translateY(0);
}

body > .page > .card .content .datacenters .datacenter .expandable .indicator {
  height: 100%;
  background: var(--dcstatus-row-expanded-indicator-bg);
  color: var(--dcstatus-row-expanded-indicator-text);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--dcstatus-row-expanded-indicator-gap);
  padding-inline: var(--dcstatus-row-expanded-indicator-padding);
  border-radius: var(--dcstatus-row-expanded-indicator-radius);
  overflow: hidden;
  position: relative;
}

body > .page > .card .content .datacenters .datacenter .expandable .indicator .title {
  font-weight: 600;
}

body > .page > .card .content .datacenters .datacenter .expandable .indicator .separator {
  background: var(--dcstatus-row-expanded-indicator-separator);
  width: var(--dcstatus-row-expanded-indicator-separator-width);
  height: 150%;
  transform: rotate(var(--dcstatus-row-expanded-indicator-separator-rotate));
  display: flex;
  align-items: center;
  justify-content: center;
}

body > .page > .card .content .datacenters .datacenter .expandable .indicator .separator img {
  filter: var(--icons-transform);
  transform: rotate(calc(-1 * var(--dcstatus-row-expanded-indicator-separator-rotate)));
  height: var(--dcstatus-row-expanded-indicator-separator-icon);
  width: var(--dcstatus-row-expanded-indicator-separator-icon);
}

@media screen and (max-width: 1100px) {
  body > .page > .card .content .datacenters .datacenter.expanded {
    padding-bottom: calc(var(--dcstatus-row-expanded-padding) + var(--dcstatus-row-expanded-expandable-height) * var(--items, 3));
  }

  body > .page > .card .content .datacenters .datacenter .expandable {
    flex-direction: column;
    height: calc(var(--dcstatus-row-expanded-expandable-height) * var(--items, 3));
    gap: var(--dcstatus-row-expanded-expandable-gap-mobile);
  }

  body > .page > .card .content .datacenters .datacenter .expandable .indicator {
    width: calc(100% - var(--dcstatus-row-expanded-padding) * 2);
    flex-direction: column;
    gap: 0;
    align-items: flex-start;
  }

  body > .page > .card .content .datacenters .datacenter .expandable .indicator .separator {
    position: absolute;
    right: var(--dcstatus-row-expanded-indicator-separator-rightpos);
    top: 50%;
    transform: translateY(-50%) rotate(var(--dcstatus-row-expanded-indicator-separator-rotate));
  }
}